@using Nop.Core.Configuration
@using Nop.Core.Domain.Common
@using Nop.Core.Domain.Seo
@using Nop.Services.Security
@using Nop.Web.Framework.Events
@using Nop.Core
@using Nop.Core.Events

@model Nop.Web.Models.Quote.MessengerModel
@inject IWorkContext workContext;
@inject Nop.Services.Common.IGenericAttributeService _genericAttributeService;
@inject Nop.Services.Localization.ILanguageService languageService
@{
    Html.AppendScriptParts(ResourceLocation.Footer, "~/js/public.countryselect.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/js/public.ajaxcart.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/js/public.common.js");
    //when jQuery migrate script logging is active you will see the log in the browser console

    Html.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/jquery-migrate/jquery-migrate.min.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/jquery-ui-dist/jquery-ui.min.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/jquery-validation/jquery.validate.min.js");
    Html.AppendScriptParts(ResourceLocation.Head, "~/lib_npm/jquery/jquery.min.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/bootstrap/js/bootstrap.min.js");
    Html.AddCssFileParts(ResourceLocation.Footer, "~/lib_npm/bootstrap/css/bootstrap.min.css");
    Html.AddCssFileParts(ResourceLocation.Footer, "~/lib_npm/@fortawesome/fontawesome-free/css/all.min.css");
    var customer = await workContext.GetCurrentCustomerAsync();
    string firstName = await _genericAttributeService.GetAttributeAsync<string>(customer, Nop.Core.Domain.Customers.NopCustomerDefaults.FirstNameAttribute);
    string lastName = await _genericAttributeService.GetAttributeAsync<string>(customer, Nop.Core.Domain.Customers.NopCustomerDefaults.LastNameAttribute);
    string company = await _genericAttributeService.GetAttributeAsync<string>(customer, Nop.Core.Domain.Customers.NopCustomerDefaults.CompanyAttribute);
    string initals = firstName.First() + "" + lastName.First();

    var _quoteId = Model.VendorId == 0 ? Model.QuoteId : Model.VendorQuoteId;
    var _sourceTypeId = Model.CustomerId == 0 ? 3 : 1;
    var _userId = customer.Id;
    var seletedUserId = Model.CustomerId == 0 ? Model.VendorId : Model.CustomerId;
    bool _customerFlag = Model.CustomerId == 0 ? false : true; // true if customer, else is vendor
    var _vendorFlag = Model.VendorId == 0 ? 0 : 1;
}
@{
    Layout = "_ColumnsTwo";
    //title
    Html.AddTitleParts(T("PageTitle.Account").Text);
    //page class
    Html.AppendPageCssClassParts("html-account-page");
    Html.AppendPageCssClassParts("html-order-list-page");
}
@section left
{
}
<div class="page account-page order-list-page">
    <div class="page-title">
        <h1>@T("Account.MyAccount") - @T("Account.CustomerQuotes")</h1>
    </div>
    <div class="p0">
        @await Component.InvokeAsync("CustomerNavigation", new { selectedTabId = CustomerNavigationEnum.CustomerQuotes })
    </div>
    <div class="page-body">
        <div class="zoomed">
            <div class="row p-3">
                @await Component.InvokeAsync("ChatHeader", new { UserName = firstName + " " + lastName,
               CompanyName = company,
               Initials = initals, IsAdmin = Model.IsAdmin,
               QuoteGuid = Model.Guid,
               QuoteId = _quoteId,
               QuoteDate = Model.QuoteDate,
               CustomerQuoteGuid = Model.CustomerQuoteGuid })
            </div>
            <div class="row p-3">
                <div class="col-3">
                    @await Component.InvokeAsync("ChatLister", new
                    {
                        UserName = firstName + " " + lastName,
                        CompanyName = company,
                        Initials = initals,
                        QuoteId = _quoteId,
                        customerFlag = _customerFlag,
                        IsAdmin = Model.IsAdmin,
                        QuoteDate = Model.QuoteDate,
                        UserId = seletedUserId,
                        QuoteGuid = Model.Guid,
                        CustomerQuoteGuid = Model.CustomerQuoteGuid
               })
                </div>
                <div class="col-6">
                    <div id="ChatCartDetails">
                        @await Component.InvokeAsync("ChatCartDetails", new { QuoteId = Model.QuoteId, customerFlag = _customerFlag, IsAdmin = Model.IsAdmin })
                    </div>
                    <div id="ChatProductDetails" style="display:none">
                        @await Component.InvokeAsync("ChatProductDetails", new { QuoteGuid = Model.CustomerQuoteGuid, CustomerFlag = _customerFlag })
                    </div>
                    <div class="pt-3" id="ChatBox">
                        @await Component.InvokeAsync("ChatBox", new { UserId = _userId, VendorId = Model.VendorId, ChatId = _quoteId })
                    </div>
                    <div id="ForwardSelectionList" style="display:none">
                        @await Component.InvokeAsync("ForwardSelectionList", new { customerQuoteId = _quoteId, isCustomer = _customerFlag })
                    </div>
                    <div id="FileUpload" style="display:none">
                        @await Component.InvokeAsync("FileUpload", new { extensions = "pdf,jpg,jpeg,png,doc,docx,xlsx,xls,zip", sourceTypeId = _sourceTypeId, sourceId = _quoteId, UserId = seletedUserId })
                    </div>

                </div>

                <div class="col-3">
                    @*<div class="row">
                            <div class="col-md-3">
                                @await Component.InvokeAsync("FileUpload", new { extensions = "pdf,jpg", sourceTypeId = 1, sourceId = Model.QuoteId })
                            </div>
                            <div class="col-md-8 mt-10 p-3">
                                <h5> File Share / Upload </h5>
                                <div class="h6"> Drag File here or browse</div>
                            </div>
                        </div>*@

                    <div class="row">
                        <a href="javascript:void(0);" onclick="showuploader()" id="showuploaderbutton">
                            <div class="col-md-4">
                                <i class=" attachment-icon fa fa-paperclip fa-2x"></i>
                            </div>
                        </a>
                        <a href="javascript:void(0);" onclick="hideuploader()" style="display:none" id="hideuploaderbutton">
                            <div class="col-md-4">
                                <i class=" attachment-icon fa fa-paperclip fa-2x"></i>
                            </div>
                        </a>
                        <div class="col-md-8 mt-10 p-3">
                            <h5> File Share / Upload </h5>
                        </div>

                    </div>

                    <div class="row" style="height:700px; overflow-y:scroll">
                        @await Component.InvokeAsync("FileLister", new { sourceTypeId = _sourceTypeId, sourceId = _quoteId, IsAdmin = Model.IsAdmin, UserId = seletedUserId })
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@Html.NopCssFiles(ResourceLocation.Footer)
@Html.NopScripts(ResourceLocation.Footer)
@Html.NopInlineScripts(ResourceLocation.Footer)

<script>
        function ShowChat() {
            $('#ChatCartDetails').show();
            $('#ChatBox').show();
        }

        function HideChat() {
            $('#ChatCartDetails').hide();
            $('#ChatBox').hide();
        }

        function showForwardList() {
            HideChat();
            $('#FileUpload').hide();
            $('#ForwardSelectionList').show();
        }

        function hideForwardList() {
            ShowChat();
            $('#ForwardSelectionList').hide();
        }

        function showuploader() {
            HideChat();
            $('#FileUpload').show();
            $('#ForwardSelectionList').hide();
            $('#hideuploaderbutton').show();
            $('#showuploaderbutton').hide();

        }
        function hideuploader() {
            ShowChat();
            $('#FileUpload').hide();
            $('#hideuploaderbutton').hide();
            $('#showuploaderbutton').show();
        }

    function hideshowCheckBox(type) {
            if (type == "file") {
                $('.cb-file').toggle();
            }
            else {
                $('.cb-chat').toggle();

            }
        }

    @*function ProductClick() {
            debugger;

            var _url = '@Url.Action("Products", "Home")';
                $.ajax({
                    type: "GET",
                    url: _url,
                    success: function (result) {
                        $('#ChatCartDetails').hide();
                        $('#ChatBox').hide();
                        $('#ChatProductDetails').show();
                    },
                });

        }*@

    function ProductClick() {
        $('#ChatCartDetails').hide();
        $('#ChatBox').hide();
        $('#ChatProductDetails').show();
    }

    function ProductClose() {
        $('#ChatCartDetails').show();
        $('#ChatBox').show();
        $('#ChatProductDetails').hide();
    }

</script>
